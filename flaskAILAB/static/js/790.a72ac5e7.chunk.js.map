{"version":3,"file":"static/js/790.a72ac5e7.chunk.js","mappings":"4LA0CA,G,gBAnCiB,SAACA,IAEGC,EAAAA,EAAAA,MAAjB,IACMC,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GACrB,OAAOA,CACX,IAsBA,OAnBAC,EAAAA,EAAAA,YAAU,WACNC,QAAQC,IAAI,SAAUL,EAC1B,KAGAG,EAAAA,EAAAA,YAAU,WACN,IAAMG,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,MAAe,KAAD,EAA1BL,EAAGE,EAAAI,KACTd,QAAQC,IAAI,iBAAkBO,GAE9BE,EAAAE,KAAA,sBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAK,GAAA,yBAAAL,EAAAM,OAAA,GAAAT,EAAA,kBAIP,kBATa,OAAAJ,EAAAc,MAAA,KAAAC,UAAA,KAUdhB,GACJ,GAAG,IAGCiB,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,UAAI,aAIhB,E","sources":["pages/uilabel/asr/LabelASR.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getLoginInfo, testJinja2 } from \"@services/api\";\nimport * as APIUtils from '@utils/APIUtils';\nimport $ from 'jquery';\nimport axios from \"axios\";\n\nconst LabelASR = (props) => {\n    \n    const dispatch = useDispatch();\n    const user = useSelector(state => {\n        return state\n    })\n\n    \n    useEffect(() => {\n        console.log(\"user: \", user)\n    })\n\n    // check call api\n    useEffect(() => {\n        const fetchApi = async () => {\n            try {\n                const res = await getLoginInfo();\n                console.log(\"getLoginInfo: \", res);\n                \n                // return res // khong choi return nhe vi dang bat dong bo\n            } catch (error) {\n                throw error\n            }\n        }\n        fetchApi()\n    }, [])\n\n    return (\n        <>\n            <h1>Label ASR</h1>\n            \n        </>\n    )\n}\n\nexport default LabelASR;"],"names":["props","useDispatch","user","useSelector","state","useEffect","console","log","fetchApi","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","getLoginInfo","sent","t0","stop","apply","arguments","React"],"sourceRoot":""}