{"version":3,"file":"static/js/558.c3f75c6b.chunk.js","mappings":"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","sources":["webpack:///./src/pages/login/styles.module.scss?166b","pages/login/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginWrapper\":\"styles_loginWrapper__kJs2m\",\"formContent\":\"styles_formContent__94Sh4\"};","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Card, Label, Button, CardBody, FormGroup, Form, Input } from 'reactstrap';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Store } from 'react-notifications-component';\nimport { withPromiseAndDispatch } from '@helpers';\n\n\nimport { signInAsync } from '@redux/auth/authActions';\n\nimport styles from './styles.module.scss';\nimport { useNavigate } from 'react-router-dom';\n\nconst SignInSchema = Yup.object().shape({\n  username: Yup.string().required('Please enter your username'),\n  password: Yup.string().required('Please enter your password'),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const signIn = ctx => withPromiseAndDispatch(signInAsync, ctx, dispatch);\n  \n\n  const formik = useFormik({\n    initialValues: { username: '', password: '' },\n    validationSchema: SignInSchema,\n    onSubmit: async values => {\n      // Store.removeNotification(); //bug\n      try {\n        const result = await signIn(values);\n        console.log('logined: ', result);\n        // console.log(\"history: \", history)\n        // history.push('/react_label_ui'); // ??? what is history?\n        // console.log(\"history: \", history)\n        navigate(\"/\") // redirect /react_label_ui\n      } catch (err) {\n        Store.addNotification({\n          title: 'Error!',\n          message: err?.error_message ?? 'System error. Please try again.',\n          type: 'danger',\n          insert: 'top',\n          container: 'top-right',\n          animationIn: ['animate__animated', 'animate__fadeIn'],\n          animationOut: ['animate__animated', 'animate__fadeOut'],\n          dismiss: {\n            duration: 2000,\n          },\n        });\n      }\n    },\n  });\n\n  useEffect(() => {\n    formik.setErrors({});\n  }, [formik.values]);\n\n  const _handleKeyDown = e => {\n    console.log(e);\n    if (e.keyCode === 13) {\n      e.preventDefault(); // Ensure it is only this code that runs\n      formik.handleSubmit();\n    }\n  };\n\n  return (\n    <div id=\"app-container\">\n      <div className=\"container-fluid\">\n        <div className=\"h-100\">\n          <div className={styles.loginWrapper}>\n            <Card className={styles.formContent}>\n              <CardBody>\n                <h4 className=\"mb-4\">Login to Zalo AILab Tools</h4>\n                <Form className=\"av-tooltip tooltip-label-bottom\">\n                  <FormGroup>\n                    <Label className=\"d-block\">User name</Label>\n                    <Input\n                      className=\"form-control\"\n                      name=\"username\"\n                      placeholder=\"Enter username ...\"\n                      value={formik.values.username}\n                      onChange={formik.handleChange}\n                      onKeyDown={_handleKeyDown}\n                    />\n                    {formik.errors.username && formik.touched.username && (\n                      <div className=\"invalid-feedback d-block\">{formik.errors.username}</div>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label className=\"d-block\">Password</Label>\n                    <Input\n                      className=\"form-control\"\n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"Enter password ...\"\n                      value={formik.values.password}\n                      onChange={formik.handleChange}\n                      onKeyDown={_handleKeyDown}\n                    />\n                    {formik.errors.password && formik.touched.password && (\n                      <div className=\"invalid-feedback d-block\">{formik.errors.password}</div>\n                    )}\n                  </FormGroup>\n\n                  <Button color=\"secondary\" block onClick={formik.handleSubmit}>\n                    Submit\n                  </Button>\n                </Form>\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["SignInSchema","Yup","shape","username","required","password","dispatch","useDispatch","navigate","useNavigate","formik","useFormik","initialValues","validationSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","result","_err$error_message","wrap","_context","prev","next","ctx","withPromiseAndDispatch","signInAsync","sent","console","log","t0","Store","title","message","error_message","type","insert","container","animationIn","animationOut","dismiss","duration","stop","_x","apply","arguments","useEffect","setErrors","_handleKeyDown","e","keyCode","preventDefault","handleSubmit","React","id","className","styles","Card","CardBody","Form","FormGroup","Label","Input","name","placeholder","value","onChange","handleChange","onKeyDown","errors","touched","Button","color","block","onClick"],"sourceRoot":""}